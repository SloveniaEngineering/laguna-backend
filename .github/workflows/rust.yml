name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    - name: Install lld and clang
      run: sudo apt-get install lld clang -y --no-install-recommends
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ubuntu-latest-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Build
      # Build for debug so that tests use the same libs
      run: cargo build
    # Apparently this method is not reliable hence we use --force when installing.
    # TODO: Find a quicker way to "install" sqlx-cli
    # - name: Check if sqlx-cli exists
    #  id: check_sqlx_exists
    #  uses: andstor/file-existence-action@v2
    #  with:
    #    files: "~/.cargo/bin/cargo-sqlx, ~/.cargo/bin/sqlx"
    - name: Install sqlx-cli
      # if: steps.check_sqlx_exists.outputs.files_exists == 'false'
      run: cargo install --force sqlx-cli --no-default-features --features rustls,postgres
    - name: Setup database and run tests
      run: scripts/test.sh
  
  deploy_docs:
    needs: build_and_test
    permissions:
      contents: write
    runs-on: ubuntu-latest
    # Only deploy docs if master branch
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docs
        run: cargo doc --no-deps --document-private-items --workspace --features dox
      - name: Doc Index Page Redirection
        run: echo '<meta http-equiv="refresh" content="1; url=laguna_backend/index.html">' > target/doc/index.html
      - name: Deploy Docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          user_name: "github-actions-laguna[bot]"
          user_email: "github-actions-laguna[bot]@users.noreply.github.com"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: documentation
          publish_dir: target/doc
          force_orphan: true
